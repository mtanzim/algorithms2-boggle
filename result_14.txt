See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  PASSED
API:          PASSED

Spotbugs:     PASSED
PMD:          FAILED (1 warning)
Checkstyle:   FAILED (0 errors, 2 warnings)

Correctness:  0/13 tests passed
Memory:       0/3 tests passed
Timing:       2/9 tests passed

Aggregate score: 14.44%
[Compilation: 5%, API: 5%, Spotbugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
3.8K Oct 10 16:32 BoggleSolver.java


********************************************************************************
*  COMPILING
********************************************************************************


% javac11 BoggleSolver.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
BoggleSolver:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS
********************************************************************************


% spotbugs *.class
*-----------------------------------------------------------


================================================================


% pmd .
*-----------------------------------------------------------
BoggleSolver.java:13: The private instance (or static) variable 'words' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
PMD ends with 1 warning.


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[WARN] BoggleSolver.java:34:11: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:70:33: To specify an array type, put the square brackets before the variable name, e.g., 'String[] args' instead of 'String args[]'. [ArrayTypeStyle]
Checkstyle ends with 0 errors and 2 warnings.


================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of BoggleSolver
*-----------------------------------------------------------
Tests 1-9 create one BoggleSolver object corresponding to the specified
dictionary and call getAllValidWords() with several different boards
as arguments.

Running 13 total tests.

Test 1: check getAllValidWords() on two fixed 4-by-4 boards given in assignment
  * dictionary = dictionary-algs4.txt; board = board4x4.txt
Hello, constructing dictionary
  * dictionary = dictionary-algs4.txt; board = board-q.txt
Hello, constructing dictionary
==> passed

Test 2: check getAllValidWords() on fixed 4-by-4 boards
  * dictionary = dictionary-yawl.txt; board = board4x4.txt
Hello, constructing dictionary
  * dictionary = dictionary-yawl.txt; board = board-points1.txt
Hello, constructing dictionary
  * dictionary = dictionary-yawl.txt; board = board-points2.txt
Hello, constructing dictionary
  * dictionary = dictionary-yawl.txt; board = board-points3.txt
Hello, constructing dictionary
  * dictionary = dictionary-yawl.txt; board = board-points4.txt
Hello, constructing dictionary


WARNING: the time limit of 100 seconds was exceeded, so not all tests could be completed.



Total: 0/13 tests passed: Could not complete tests, which results in a reported score of 0.
================================================================
********************************************************************************
*  MEMORY
********************************************************************************

Analyzing memory of BoggleSolver
*-----------------------------------------------------------
Running 3 total tests.

Hello, constructing dictionary
Test 1: memory with dictionary-algs4.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 450264 bytes
  * memory of student   BoggleSolver = 36239352 bytes
  * memory of reference BoggleSolver = 5091200 bytes
  * student / reference              = 7.12
==> FAILED

Hello, constructing dictionary
Test 2: memory with dictionary-shakespeare.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 1754288 bytes
  * memory of student   BoggleSolver = 121464072 bytes
  * memory of reference BoggleSolver = 17306488 bytes
  * student / reference              = 7.02
==> FAILED

Hello, constructing dictionary
Test 3: memory with dictionary-yawl.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 20259736 bytes
  * memory of student   BoggleSolver = 1227723096 bytes
  * memory of reference BoggleSolver = 176875128 bytes
  * student / reference              = 6.94
==> FAILED


Total: 0/3 tests passed!


================================================================



********************************************************************************
*  TIMING
********************************************************************************

Timing BoggleSolver
*-----------------------------------------------------------
All timing tests are for random 4-by-4 boards (using the Hasbro dice).
The dictionary is specified with each test.

Running 9 total tests.

Test 1: timing constructor (must be <= 5x reference solution)
 *  dictionary-algs4.txt
Hello, constructing dictionary
    - student   solution time (in seconds): 0.01
    - reference solution time (in seconds): 0.00
    - ratio:                                3.74

==> passed

 *  dictionary-enable2k.txt
Hello, constructing dictionary
    - student   solution time (in seconds): 0.34
    - reference solution time (in seconds): 0.03
    - ratio:                                13.11

==> FAILED

 *  dictionary-yawl.txt
Hello, constructing dictionary
    - student   solution time (in seconds): 0.44
    - reference solution time (in seconds): 0.16
    - ratio:                                2.80

==> passed

 *  dictionary-zingarelli2005.txt
Hello, constructing dictionary

    java.lang.OutOfMemoryError: Java heap space

    edu.princeton.cs.algs4.TrieSET$Node.<init>(TrieSET.java:47)
    edu.princeton.cs.algs4.TrieSET$Node.<init>(TrieSET.java:46)
    edu.princeton.cs.algs4.TrieSET.add(TrieSET.java:89)
    edu.princeton.cs.algs4.TrieSET.add(TrieSET.java:96)
    edu.princeton.cs.algs4.TrieSET.add(TrieSET.java:96)
    ...
    BoggleSolver.<init>(BoggleSolver.java:20)
    TimeBoggleSolver.timeForConstructor(TimeBoggleSolver.java:29)
    TimeBoggleSolver.testConstructor(TimeBoggleSolver.java:92)
    TimeBoggleSolver.test1(TimeBoggleSolver.java:117)
    TimeBoggleSolver.main(TimeBoggleSolver.java:180)

==> FAILED

Test 2: timing getAllValidWords() for 5.0 seconds using dictionary-yawl.txt
        (must be <= 2x reference solution)
    - reference solution calls per second: 8197.27
    - student   solution calls per second: 0.05
    - reference / student ratio:           162254.02

=> FAILED    student <= 10000x reference
=> FAILED    student <=    25x reference
=> FAILED    student <=    10x reference
=> FAILED    student <=     5x reference
=> FAILED    student <=     2x reference


Total: 2/9 tests passed!


================================================================