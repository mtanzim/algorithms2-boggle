See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  PASSED
API:          PASSED

Spotbugs:     PASSED
PMD:          FAILED (1 warning)
Checkstyle:   FAILED (0 errors, 2 warnings)

Correctness:  9/13 tests passed
Memory:       3/3 tests passed
Timing:       5/9 tests passed

Aggregate score: 72.65%
[Compilation: 5%, API: 5%, Spotbugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
4.9K Oct 10 20:46 BoggleSolver.java


********************************************************************************
*  COMPILING
********************************************************************************


% javac11 BoggleSolver.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
BoggleSolver:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS
********************************************************************************


% spotbugs *.class
*-----------------------------------------------------------


================================================================


% pmd .
*-----------------------------------------------------------
BoggleSolver.java:16: The private instance (or static) variable 'words' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
PMD ends with 1 warning.


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[WARN] BoggleSolver.java:23:54: ',' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:121:45: ',' is not followed by whitespace. [WhitespaceAfter]
Checkstyle ends with 0 errors and 2 warnings.


================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of BoggleSolver
*-----------------------------------------------------------
Tests 1-9 create one BoggleSolver object corresponding to the specified
dictionary and call getAllValidWords() with several different boards
as arguments.

Running 13 total tests.

Test 1: check getAllValidWords() on two fixed 4-by-4 boards given in assignment
  * dictionary = dictionary-algs4.txt; board = board4x4.txt
  * dictionary = dictionary-algs4.txt; board = board-q.txt
==> passed

Test 2: check getAllValidWords() on fixed 4-by-4 boards
  * dictionary = dictionary-yawl.txt; board = board4x4.txt
  * dictionary = dictionary-yawl.txt; board = board-points1.txt
  * dictionary = dictionary-yawl.txt; board = board-points2.txt
  * dictionary = dictionary-yawl.txt; board = board-points3.txt
  * dictionary = dictionary-yawl.txt; board = board-points4.txt
  * dictionary = dictionary-yawl.txt; board = board-points5.txt
==> passed

Test 3: check getAllValidWords() on more fixed 4-by-4 boards
  * dictionary = dictionary-yawl.txt; board = board-points100.txt
  * dictionary = dictionary-yawl.txt; board = board-points200.txt
  * dictionary = dictionary-yawl.txt; board = board-points300.txt
  * dictionary = dictionary-yawl.txt; board = board-points400.txt
  * dictionary = dictionary-yawl.txt; board = board-points500.txt
  * dictionary = dictionary-yawl.txt; board = board-points750.txt
  * dictionary = dictionary-yawl.txt; board = board-points1000.txt
  * dictionary = dictionary-yawl.txt; board = board-points1250.txt
  * dictionary = dictionary-yawl.txt; board = board-points1500.txt
  * dictionary = dictionary-yawl.txt; board = board-points2000.txt
==> passed

Test 4: check getAllValidWords() on random Hasbro boards
  * dictionary = dictionary-yawl.txt; board = 10 random Hasbro boards
  * dictionary = dictionary-yawl.txt; board = 50 random Hasbro boards
  * dictionary = dictionary-yawl.txt; board = 100 random Hasbro boards
==> passed

Test 5: check getAllValidWords() on high-scoring n-by-n boards
  * dictionary = dictionary-yawl.txt; board = board-points4410.txt
  * dictionary = dictionary-yawl.txt; board = board-points4527.txt
  * dictionary = dictionary-yawl.txt; board = board-points13464.txt
  * dictionary = dictionary-yawl.txt; board = board-points26539.txt
==> passed

Test 6: check getAllValidWords() on exotic boards
  * dictionary = dictionary-yawl.txt; board = board-dodo.txt
  * dictionary = dictionary-yawl.txt; board = board-noon.txt
  * dictionary = dictionary-yawl.txt; board = board-couscous.txt
  * dictionary = dictionary-yawl.txt; board = board-rotavator.txt
  * dictionary = dictionary-yawl.txt; board = board-estrangers.txt
  * dictionary = dictionary-yawl.txt; board = board-antidisestablishmentarianisms.txt

    java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1

    BoggleSolver.dfsBoard(BoggleSolver.java:31)
    BoggleSolver.getAllValidWords(BoggleSolver.java:77)
    TestBoggleSolver.testFileBoard(TestBoggleSolver.java:107)
    TestBoggleSolver.test6(TestBoggleSolver.java:237)
    TestBoggleSolver.main(TestBoggleSolver.java:435)

         1 29
         A  N  T  I  D  I  S  E  S  T  A  B  L  I  S  H  M  E  N  T  A  R  I  A  N  I  S  M  S

  * dictionary = dictionary-yawl.txt; board = board-dichlorodiphenyltrichloroethanes.txt

    java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1

    BoggleSolver.dfsBoard(BoggleSolver.java:31)
    BoggleSolver.getAllValidWords(BoggleSolver.java:77)
    TestBoggleSolver.testFileBoard(TestBoggleSolver.java:107)
    TestBoggleSolver.test6(TestBoggleSolver.java:238)
    TestBoggleSolver.main(TestBoggleSolver.java:435)

         32 1
         S
         E
         N
         A
         H
         T
         E
         O
         R
         O
         L
         H
         C
         I
         R
         T
         L
         Y
         N
         E
         H
         P
         I
         D
         O
         R
         O
         L
         H
         C
         I
         D

  * dictionary = dictionary-yawl.txt; board = board-pneumonoultramicroscopicsilicovolcanoconiosis.txt
==> FAILED

Test 7: check getAllValidWords() on boards with a Q
  * dictionary = dictionary-yawl.txt; board = board-qwerty.txt
  * dictionary = dictionary-yawl.txt; board = board-quinquevalencies.txt
  * dictionary = dictionary-yawl.txt; board = board-inconsequentially.txt
  * dictionary = dictionary-yawl.txt; board = board-qaimaqam.txt
  * dictionary = dictionary-yawl.txt; board = board-aqua.txt
  * dictionary = dictionary-yawl.txt; board = 100 random Hasbro boards
  * dictionary = dictionary-16q.txt; board = board-9q.txt
  * dictionary = dictionary-16q.txt; board = board-16q.txt
==> passed

Test 8: check getAllValidWords() on random m-by-n boards
  * dictionary = dictionary-common.txt; board = 100 random 3-by-3 boards
  * dictionary = dictionary-common.txt; board = 100 random 4-by-4 boards
  * dictionary = dictionary-common.txt; board = 100 random 5-by-5 boards
  * dictionary = dictionary-common.txt; board = 20 random 5-by-10 boards

    java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length 5

    BoggleSolver.dfsBoard(BoggleSolver.java:31)
    BoggleSolver.getAllValidWords(BoggleSolver.java:77)
    TestBoggleSolver.testRandomBoards(TestBoggleSolver.java:82)
    TestBoggleSolver.test8(TestBoggleSolver.java:292)
    TestBoggleSolver.main(TestBoggleSolver.java:437)

    - failed on trial 1 of 20
         5 10
         E  F  V  T  H  T  S  I  O  E
         S  N  E  S  T  S  G  E  H  I
         W  D  S  Y  O  S  D  R  L  H
         B  A  A  G  E  B  F  A  T  I
         E  O  L  C  N  S  N  C  A  C

  * dictionary = dictionary-common.txt; board = 20 random 10-by-5 boards

    java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length 5

    BoggleSolver.dfsBoard(BoggleSolver.java:31)
    BoggleSolver.getAllValidWords(BoggleSolver.java:77)
    TestBoggleSolver.testRandomBoards(TestBoggleSolver.java:82)
    TestBoggleSolver.test8(TestBoggleSolver.java:293)
    TestBoggleSolver.main(TestBoggleSolver.java:437)

    - failed on trial 1 of 20
         10 5
         B  A  E  H  D
         R  N  W  P  K
         O  N  A  W  O
         A  A  O  R  A
         R  L  R  W  E
         S  C  S  L  A
         K  I  S  O  D
         E  U  T  H  S
         O  D  Y  O  L
         N  E  R  A  E

==> FAILED

Test 9: check getAllValidWords() on random m-by-n boards
  * dictionary = dictionary-common.txt; board = 10 random 2-by-2 boards
  * dictionary = dictionary-common.txt; board = 10 random 1-by-10 boards

    java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1

    BoggleSolver.dfsBoard(BoggleSolver.java:31)
    BoggleSolver.getAllValidWords(BoggleSolver.java:77)
    TestBoggleSolver.testRandomBoards(TestBoggleSolver.java:82)
    TestBoggleSolver.test9(TestBoggleSolver.java:315)
    TestBoggleSolver.main(TestBoggleSolver.java:438)

    - failed on trial 1 of 10
         1 10
         S  E  Y  E  M  E  T  H  H  O

  * dictionary = dictionary-common.txt; board = 10 random 10-by-1 boards

    java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1

    BoggleSolver.dfsBoard(BoggleSolver.java:31)
    BoggleSolver.getAllValidWords(BoggleSolver.java:77)
    TestBoggleSolver.testRandomBoards(TestBoggleSolver.java:82)
    TestBoggleSolver.test9(TestBoggleSolver.java:316)
    TestBoggleSolver.main(TestBoggleSolver.java:438)

    - failed on trial 1 of 10
         10 1
         T
         D
         O
         E
         T
         E
         E
         T
         E
         E

  * dictionary = dictionary-common.txt; board = 10 random 1-by-1 boards
  * dictionary = dictionary-common.txt; board = 10 random 1-by-2 boards

    java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1

    BoggleSolver.dfsBoard(BoggleSolver.java:31)
    BoggleSolver.getAllValidWords(BoggleSolver.java:77)
    TestBoggleSolver.testRandomBoards(TestBoggleSolver.java:82)
    TestBoggleSolver.test9(TestBoggleSolver.java:318)
    TestBoggleSolver.main(TestBoggleSolver.java:438)

    - failed on trial 1 of 10
         1 2
         H  L

  * dictionary = dictionary-common.txt; board = 10 random 2-by-1 boards

    java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1

    BoggleSolver.dfsBoard(BoggleSolver.java:31)
    BoggleSolver.getAllValidWords(BoggleSolver.java:77)
    TestBoggleSolver.testRandomBoards(TestBoggleSolver.java:82)
    TestBoggleSolver.test9(TestBoggleSolver.java:319)
    TestBoggleSolver.main(TestBoggleSolver.java:438)

    - failed on trial 1 of 10
         2 1
         D
         A

==> FAILED

Test 10: check getAllValidWords() on boards with no valid words
  * dictionary = dictionary-nursery.txt; board = board-points0.txt
  * dictionary = dictionary-2letters.txt; board = board-points4410.txt
==> passed

Test 11: mutating dictionary[] after passing to BoggleSolver constructor
  * dictionary = dictionary-algs4.txt
  * dictionary = dictionary-algs4.txt; board = 10 random Hasbro boards
==> passed

Test 12: create more than one BoggleSolver object at a time
         [ BoggleSolver object 1 uses dictionary-algs4.txt   ]
         [ BoggleSolver object 2 uses dictionary-nursery.txt ]
  * dictionary = dictionary-algs4.txt; board = 10 random Hasbro boards
  * dictionary = dictionary-nursery.txt; board = 10 random Hasbro boards
  * dictionary = dictionary-algs4.txt; board = 10 random Hasbro boards
==> passed

Test 13: check scoreOf() on various dictionaries
  * dictionary = dictionary-algs4.txt
    - word = 'CURDS'
    - student   score = 2
    - reference score = 0
    - failed on trial 1 of 1000

  * dictionary = dictionary-common.txt
    - word = 'STORED'
    - student   score = 3
    - reference score = 0
    - failed on trial 2 of 5000

  * dictionary = dictionary-shakespeare.txt
    - word = 'RECIPIENT'
    - student   score = 11
    - reference score = 0
    - failed on trial 2 of 10000

  * dictionary = dictionary-nursery.txt
  * dictionary = dictionary-yawl.txt
    - word = 'PENTHESILEA'
    - student   score = 11
    - reference score = 0
    - failed on trial 6 of 20000

==> FAILED


Total: 9/13 tests passed!


================================================================
********************************************************************************
*  MEMORY
********************************************************************************

Analyzing memory of BoggleSolver
*-----------------------------------------------------------
Running 3 total tests.

Test 1: memory with dictionary-algs4.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 450264 bytes
  * memory of student   BoggleSolver = 964568 bytes
  * memory of reference BoggleSolver = 5091200 bytes
  * student / reference              = 0.19
==> passed

Test 2: memory with dictionary-shakespeare.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 1754288 bytes
  * memory of student   BoggleSolver = 3237272 bytes
  * memory of reference BoggleSolver = 17305728 bytes
  * student / reference              = 0.19
==> passed

Test 3: memory with dictionary-yawl.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 20258936 bytes
  * memory of student   BoggleSolver = 32758232 bytes
  * memory of reference BoggleSolver = 176878024 bytes
  * student / reference              = 0.19
==> passed


Total: 3/3 tests passed!


================================================================



********************************************************************************
*  TIMING
********************************************************************************

Timing BoggleSolver
*-----------------------------------------------------------
All timing tests are for random 4-by-4 boards (using the Hasbro dice).
The dictionary is specified with each test.

Running 9 total tests.

Test 1: timing constructor (must be <= 5x reference solution)
 *  dictionary-algs4.txt
    - student   solution time (in seconds): 0.02
    - reference solution time (in seconds): 0.00
    - ratio:                                4.06

==> passed

 *  dictionary-enable2k.txt
    - student   solution time (in seconds): 0.07
    - reference solution time (in seconds): 0.02
    - ratio:                                3.06

==> passed

 *  dictionary-yawl.txt
    - student   solution time (in seconds): 0.10
    - reference solution time (in seconds): 0.08
    - ratio:                                1.40

==> passed

 *  dictionary-zingarelli2005.txt
    - student   solution time (in seconds): 0.25
    - reference solution time (in seconds): 0.26
    - ratio:                                0.96

==> passed

Test 2: timing getAllValidWords() for 5.0 seconds using dictionary-yawl.txt
        (must be <= 2x reference solution)
    - reference solution calls per second: 7961.33
    - student   solution calls per second: 39.33
    - reference / student ratio:           202.45

=> passed    student <= 10000x reference
=> FAILED    student <=    25x reference
=> FAILED    student <=    10x reference
=> FAILED    student <=     5x reference
=> FAILED    student <=     2x reference


Total: 5/9 tests passed!


================================================================